// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: api/lale-service.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Card struct {
	state                           protoimpl.MessageState `protogen:"open.v1"`
	Id                              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID                          string                 `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Language                        string                 `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	WordInformationList             []*WordInformation     `protobuf:"bytes,4,rep,name=wordInformationList,proto3" json:"wordInformationList,omitempty"`
	ConsecutiveCorrectAnswersNumber uint32                 `protobuf:"varint,5,opt,name=consecutiveCorrectAnswersNumber,proto3" json:"consecutiveCorrectAnswersNumber,omitempty"`
	NextDueDate                     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=nextDueDate,proto3" json:"nextDueDate,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *Card) Reset() {
	*x = Card{}
	mi := &file_api_lale_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{0}
}

func (x *Card) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Card) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Card) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Card) GetWordInformationList() []*WordInformation {
	if x != nil {
		return x.WordInformationList
	}
	return nil
}

func (x *Card) GetConsecutiveCorrectAnswersNumber() uint32 {
	if x != nil {
		return x.ConsecutiveCorrectAnswersNumber
	}
	return 0
}

func (x *Card) GetNextDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NextDueDate
	}
	return nil
}

type WordInformation struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Word            string                 `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Translation     *Translation           `protobuf:"bytes,2,opt,name=Translation,proto3" json:"Translation,omitempty"`
	Origin          string                 `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	Phonetics       []*Phonetic            `protobuf:"bytes,4,rep,name=phonetics,proto3" json:"phonetics,omitempty"`
	Meanings        []*Meaning             `protobuf:"bytes,5,rep,name=meanings,proto3" json:"meanings,omitempty"`
	AudioByLanguage map[string][]byte      `protobuf:"bytes,6,rep,name=audioByLanguage,proto3" json:"audioByLanguage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WordInformation) Reset() {
	*x = WordInformation{}
	mi := &file_api_lale_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WordInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordInformation) ProtoMessage() {}

func (x *WordInformation) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordInformation.ProtoReflect.Descriptor instead.
func (*WordInformation) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{1}
}

func (x *WordInformation) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *WordInformation) GetTranslation() *Translation {
	if x != nil {
		return x.Translation
	}
	return nil
}

func (x *WordInformation) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *WordInformation) GetPhonetics() []*Phonetic {
	if x != nil {
		return x.Phonetics
	}
	return nil
}

func (x *WordInformation) GetMeanings() []*Meaning {
	if x != nil {
		return x.Meanings
	}
	return nil
}

func (x *WordInformation) GetAudioByLanguage() map[string][]byte {
	if x != nil {
		return x.AudioByLanguage
	}
	return nil
}

type Translation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      string                 `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Translations  []string               `protobuf:"bytes,2,rep,name=Translations,proto3" json:"Translations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Translation) Reset() {
	*x = Translation{}
	mi := &file_api_lale_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Translation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Translation) ProtoMessage() {}

func (x *Translation) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Translation.ProtoReflect.Descriptor instead.
func (*Translation) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{2}
}

func (x *Translation) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Translation) GetTranslations() []string {
	if x != nil {
		return x.Translations
	}
	return nil
}

type Phonetic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Phonetic) Reset() {
	*x = Phonetic{}
	mi := &file_api_lale_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Phonetic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phonetic) ProtoMessage() {}

func (x *Phonetic) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phonetic.ProtoReflect.Descriptor instead.
func (*Phonetic) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{3}
}

func (x *Phonetic) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Meaning struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartOfSpeech  string                 `protobuf:"bytes,1,opt,name=partOfSpeech,proto3" json:"partOfSpeech,omitempty"`
	Definitions   []*Definition          `protobuf:"bytes,2,rep,name=Definitions,proto3" json:"Definitions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Meaning) Reset() {
	*x = Meaning{}
	mi := &file_api_lale_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Meaning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meaning) ProtoMessage() {}

func (x *Meaning) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meaning.ProtoReflect.Descriptor instead.
func (*Meaning) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{4}
}

func (x *Meaning) GetPartOfSpeech() string {
	if x != nil {
		return x.PartOfSpeech
	}
	return ""
}

func (x *Meaning) GetDefinitions() []*Definition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

type Definition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Definition    string                 `protobuf:"bytes,1,opt,name=definition,proto3" json:"definition,omitempty"`
	Example       string                 `protobuf:"bytes,2,opt,name=example,proto3" json:"example,omitempty"`
	Synonyms      []string               `protobuf:"bytes,3,rep,name=synonyms,proto3" json:"synonyms,omitempty"`
	Antonyms      []string               `protobuf:"bytes,4,rep,name=antonyms,proto3" json:"antonyms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Definition) Reset() {
	*x = Definition{}
	mi := &file_api_lale_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Definition) ProtoMessage() {}

func (x *Definition) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Definition.ProtoReflect.Descriptor instead.
func (*Definition) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{5}
}

func (x *Definition) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *Definition) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

func (x *Definition) GetSynonyms() []string {
	if x != nil {
		return x.Synonyms
	}
	return nil
}

func (x *Definition) GetAntonyms() []string {
	if x != nil {
		return x.Antonyms
	}
	return nil
}

type GetCardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Language      string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCardsRequest) Reset() {
	*x = GetCardsRequest{}
	mi := &file_api_lale_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardsRequest) ProtoMessage() {}

func (x *GetCardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardsRequest.ProtoReflect.Descriptor instead.
func (*GetCardsRequest) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetCardsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetCardsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type CreateCardRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	UserID              string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Language            string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	WordInformationList []*WordInformation     `protobuf:"bytes,3,rep,name=wordInformationList,proto3" json:"wordInformationList,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateCardRequest) Reset() {
	*x = CreateCardRequest{}
	mi := &file_api_lale_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCardRequest) ProtoMessage() {}

func (x *CreateCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCardRequest.ProtoReflect.Descriptor instead.
func (*CreateCardRequest) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCardRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateCardRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CreateCardRequest) GetWordInformationList() []*WordInformation {
	if x != nil {
		return x.WordInformationList
	}
	return nil
}

type UpdateCardRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	UserID              string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CardID              string                 `protobuf:"bytes,2,opt,name=cardID,proto3" json:"cardID,omitempty"`
	WordInformationList []*WordInformation     `protobuf:"bytes,4,rep,name=wordInformationList,proto3" json:"wordInformationList,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *UpdateCardRequest) Reset() {
	*x = UpdateCardRequest{}
	mi := &file_api_lale_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCardRequest) ProtoMessage() {}

func (x *UpdateCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCardRequest.ProtoReflect.Descriptor instead.
func (*UpdateCardRequest) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateCardRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateCardRequest) GetCardID() string {
	if x != nil {
		return x.CardID
	}
	return ""
}

func (x *UpdateCardRequest) GetWordInformationList() []*WordInformation {
	if x != nil {
		return x.WordInformationList
	}
	return nil
}

type InspectCardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Language      string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Word          string                 `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectCardRequest) Reset() {
	*x = InspectCardRequest{}
	mi := &file_api_lale_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectCardRequest) ProtoMessage() {}

func (x *InspectCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectCardRequest.ProtoReflect.Descriptor instead.
func (*InspectCardRequest) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{9}
}

func (x *InspectCardRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *InspectCardRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *InspectCardRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

type PromptCardRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	UserID              string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Word                string                 `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`
	WordLanguage        string                 `protobuf:"bytes,3,opt,name=word_language,json=wordLanguage,proto3" json:"word_language,omitempty"`
	TranslationLanguage string                 `protobuf:"bytes,4,opt,name=translation_language,json=translationLanguage,proto3" json:"translation_language,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PromptCardRequest) Reset() {
	*x = PromptCardRequest{}
	mi := &file_api_lale_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptCardRequest) ProtoMessage() {}

func (x *PromptCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptCardRequest.ProtoReflect.Descriptor instead.
func (*PromptCardRequest) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{10}
}

func (x *PromptCardRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *PromptCardRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *PromptCardRequest) GetWordLanguage() string {
	if x != nil {
		return x.WordLanguage
	}
	return ""
}

func (x *PromptCardRequest) GetTranslationLanguage() string {
	if x != nil {
		return x.TranslationLanguage
	}
	return ""
}

type PromptCardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Words         []string               `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromptCardResponse) Reset() {
	*x = PromptCardResponse{}
	mi := &file_api_lale_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptCardResponse) ProtoMessage() {}

func (x *PromptCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptCardResponse.ProtoReflect.Descriptor instead.
func (*PromptCardResponse) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{11}
}

func (x *PromptCardResponse) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

type GetCardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Language      string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	Cards         []*Card                `protobuf:"bytes,3,rep,name=cards,proto3" json:"cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCardsResponse) Reset() {
	*x = GetCardsResponse{}
	mi := &file_api_lale_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCardsResponse) ProtoMessage() {}

func (x *GetCardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCardsResponse.ProtoReflect.Descriptor instead.
func (*GetCardsResponse) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetCardsResponse) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetCardsResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetCardsResponse) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type UpdateCardPerformanceRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserID         string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CardID         string                 `protobuf:"bytes,2,opt,name=cardID,proto3" json:"cardID,omitempty"`
	IsInputCorrect bool                   `protobuf:"varint,3,opt,name=is_input_correct,json=isInputCorrect,proto3" json:"is_input_correct,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateCardPerformanceRequest) Reset() {
	*x = UpdateCardPerformanceRequest{}
	mi := &file_api_lale_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCardPerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCardPerformanceRequest) ProtoMessage() {}

func (x *UpdateCardPerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCardPerformanceRequest.ProtoReflect.Descriptor instead.
func (*UpdateCardPerformanceRequest) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateCardPerformanceRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateCardPerformanceRequest) GetCardID() string {
	if x != nil {
		return x.CardID
	}
	return ""
}

func (x *UpdateCardPerformanceRequest) GetIsInputCorrect() bool {
	if x != nil {
		return x.IsInputCorrect
	}
	return false
}

type UpdateCardPerformanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NextDueDate   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=nextDueDate,proto3" json:"nextDueDate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCardPerformanceResponse) Reset() {
	*x = UpdateCardPerformanceResponse{}
	mi := &file_api_lale_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCardPerformanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCardPerformanceResponse) ProtoMessage() {}

func (x *UpdateCardPerformanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCardPerformanceResponse.ProtoReflect.Descriptor instead.
func (*UpdateCardPerformanceResponse) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateCardPerformanceResponse) GetNextDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NextDueDate
	}
	return nil
}

type GetSentencesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserID         string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Word           string                 `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`
	SentencesCount uint32                 `protobuf:"varint,3,opt,name=sentencesCount,proto3" json:"sentencesCount,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetSentencesRequest) Reset() {
	*x = GetSentencesRequest{}
	mi := &file_api_lale_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSentencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSentencesRequest) ProtoMessage() {}

func (x *GetSentencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSentencesRequest.ProtoReflect.Descriptor instead.
func (*GetSentencesRequest) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetSentencesRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetSentencesRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *GetSentencesRequest) GetSentencesCount() uint32 {
	if x != nil {
		return x.SentencesCount
	}
	return 0
}

type GetSentencesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sentences     []string               `protobuf:"bytes,1,rep,name=sentences,proto3" json:"sentences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSentencesResponse) Reset() {
	*x = GetSentencesResponse{}
	mi := &file_api_lale_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSentencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSentencesResponse) ProtoMessage() {}

func (x *GetSentencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSentencesResponse.ProtoReflect.Descriptor instead.
func (*GetSentencesResponse) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetSentencesResponse) GetSentences() []string {
	if x != nil {
		return x.Sentences
	}
	return nil
}

type GenerateStoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Language      string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateStoryRequest) Reset() {
	*x = GenerateStoryRequest{}
	mi := &file_api_lale_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateStoryRequest) ProtoMessage() {}

func (x *GenerateStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateStoryRequest.ProtoReflect.Descriptor instead.
func (*GenerateStoryRequest) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{17}
}

func (x *GenerateStoryRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GenerateStoryRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GenerateStoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Story         string                 `protobuf:"bytes,1,opt,name=story,proto3" json:"story,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateStoryResponse) Reset() {
	*x = GenerateStoryResponse{}
	mi := &file_api_lale_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateStoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateStoryResponse) ProtoMessage() {}

func (x *GenerateStoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateStoryResponse.ProtoReflect.Descriptor instead.
func (*GenerateStoryResponse) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{18}
}

func (x *GenerateStoryResponse) GetStory() string {
	if x != nil {
		return x.Story
	}
	return ""
}

type DeleteCardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CardID        string                 `protobuf:"bytes,2,opt,name=cardID,proto3" json:"cardID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCardRequest) Reset() {
	*x = DeleteCardRequest{}
	mi := &file_api_lale_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCardRequest) ProtoMessage() {}

func (x *DeleteCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_lale_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCardRequest.ProtoReflect.Descriptor instead.
func (*DeleteCardRequest) Descriptor() ([]byte, []int) {
	return file_api_lale_service_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteCardRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeleteCardRequest) GetCardID() string {
	if x != nil {
		return x.CardID
	}
	return ""
}

var File_api_lale_service_proto protoreflect.FileDescriptor

const file_api_lale_service_proto_rawDesc = "" +
	"\n" +
	"\x16api/lale-service.proto\x12\x03api\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9a\x02\n" +
	"\x04Card\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\tR\x06userID\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\tR\blanguage\x12F\n" +
	"\x13wordInformationList\x18\x04 \x03(\v2\x14.api.WordInformationR\x13wordInformationList\x12H\n" +
	"\x1fconsecutiveCorrectAnswersNumber\x18\x05 \x01(\rR\x1fconsecutiveCorrectAnswersNumber\x12<\n" +
	"\vnextDueDate\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vnextDueDate\"\xe1\x02\n" +
	"\x0fWordInformation\x12\x12\n" +
	"\x04word\x18\x01 \x01(\tR\x04word\x122\n" +
	"\vTranslation\x18\x02 \x01(\v2\x10.api.TranslationR\vTranslation\x12\x16\n" +
	"\x06origin\x18\x03 \x01(\tR\x06origin\x12+\n" +
	"\tphonetics\x18\x04 \x03(\v2\r.api.PhoneticR\tphonetics\x12(\n" +
	"\bmeanings\x18\x05 \x03(\v2\f.api.MeaningR\bmeanings\x12S\n" +
	"\x0faudioByLanguage\x18\x06 \x03(\v2).api.WordInformation.AudioByLanguageEntryR\x0faudioByLanguage\x1aB\n" +
	"\x14AudioByLanguageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"M\n" +
	"\vTranslation\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\"\n" +
	"\fTranslations\x18\x02 \x03(\tR\fTranslations\"\x1e\n" +
	"\bPhonetic\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"`\n" +
	"\aMeaning\x12\"\n" +
	"\fpartOfSpeech\x18\x01 \x01(\tR\fpartOfSpeech\x121\n" +
	"\vDefinitions\x18\x02 \x03(\v2\x0f.api.DefinitionR\vDefinitions\"~\n" +
	"\n" +
	"Definition\x12\x1e\n" +
	"\n" +
	"definition\x18\x01 \x01(\tR\n" +
	"definition\x12\x18\n" +
	"\aexample\x18\x02 \x01(\tR\aexample\x12\x1a\n" +
	"\bsynonyms\x18\x03 \x03(\tR\bsynonyms\x12\x1a\n" +
	"\bantonyms\x18\x04 \x03(\tR\bantonyms\"E\n" +
	"\x0fGetCardsRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\"\x8f\x01\n" +
	"\x11CreateCardRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\x12F\n" +
	"\x13wordInformationList\x18\x03 \x03(\v2\x14.api.WordInformationR\x13wordInformationList\"\x8b\x01\n" +
	"\x11UpdateCardRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x16\n" +
	"\x06cardID\x18\x02 \x01(\tR\x06cardID\x12F\n" +
	"\x13wordInformationList\x18\x04 \x03(\v2\x14.api.WordInformationR\x13wordInformationList\"\\\n" +
	"\x12InspectCardRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\x12\x12\n" +
	"\x04word\x18\x03 \x01(\tR\x04word\"\x97\x01\n" +
	"\x11PromptCardRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x12\n" +
	"\x04word\x18\x02 \x01(\tR\x04word\x12#\n" +
	"\rword_language\x18\x03 \x01(\tR\fwordLanguage\x121\n" +
	"\x14translation_language\x18\x04 \x01(\tR\x13translationLanguage\"*\n" +
	"\x12PromptCardResponse\x12\x14\n" +
	"\x05words\x18\x01 \x03(\tR\x05words\"g\n" +
	"\x10GetCardsResponse\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\x12\x1f\n" +
	"\x05cards\x18\x03 \x03(\v2\t.api.CardR\x05cards\"x\n" +
	"\x1cUpdateCardPerformanceRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x16\n" +
	"\x06cardID\x18\x02 \x01(\tR\x06cardID\x12(\n" +
	"\x10is_input_correct\x18\x03 \x01(\bR\x0eisInputCorrect\"]\n" +
	"\x1dUpdateCardPerformanceResponse\x12<\n" +
	"\vnextDueDate\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\vnextDueDate\"i\n" +
	"\x13GetSentencesRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x12\n" +
	"\x04word\x18\x02 \x01(\tR\x04word\x12&\n" +
	"\x0esentencesCount\x18\x03 \x01(\rR\x0esentencesCount\"4\n" +
	"\x14GetSentencesResponse\x12\x1c\n" +
	"\tsentences\x18\x01 \x03(\tR\tsentences\"J\n" +
	"\x14GenerateStoryRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\"-\n" +
	"\x15GenerateStoryResponse\x12\x14\n" +
	"\x05story\x18\x01 \x01(\tR\x05story\"C\n" +
	"\x11DeleteCardRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\x12\x16\n" +
	"\x06cardID\x18\x02 \x01(\tR\x06cardID2\xbc\x05\n" +
	"\vLaleService\x121\n" +
	"\vInspectCard\x12\x17.api.InspectCardRequest\x1a\t.api.Card\x12=\n" +
	"\n" +
	"PromptCard\x12\x16.api.PromptCardRequest\x1a\x17.api.PromptCardResponse\x12/\n" +
	"\n" +
	"CreateCard\x12\x16.api.CreateCardRequest\x1a\t.api.Card\x12:\n" +
	"\vGetAllCards\x12\x14.api.GetCardsRequest\x1a\x15.api.GetCardsResponse\x12/\n" +
	"\n" +
	"UpdateCard\x12\x16.api.UpdateCardRequest\x1a\t.api.Card\x12^\n" +
	"\x15UpdateCardPerformance\x12!.api.UpdateCardPerformanceRequest\x1a\".api.UpdateCardPerformanceResponse\x12?\n" +
	"\x10GetCardsToRepeat\x12\x14.api.GetCardsRequest\x1a\x15.api.GetCardsResponse\x12>\n" +
	"\x0fGetCardsToLearn\x12\x14.api.GetCardsRequest\x1a\x15.api.GetCardsResponse\x12C\n" +
	"\fGetSentences\x12\x18.api.GetSentencesRequest\x1a\x19.api.GetSentencesResponse\x12F\n" +
	"\rGenerateStory\x12\x19.api.GenerateStoryRequest\x1a\x1a.api.GenerateStoryResponse\x12/\n" +
	"\n" +
	"DeleteCard\x12\x16.api.DeleteCardRequest\x1a\t.api.CardB\"Z github.com/genvmoroz/service/apib\x06proto3"

var (
	file_api_lale_service_proto_rawDescOnce sync.Once
	file_api_lale_service_proto_rawDescData []byte
)

func file_api_lale_service_proto_rawDescGZIP() []byte {
	file_api_lale_service_proto_rawDescOnce.Do(func() {
		file_api_lale_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_lale_service_proto_rawDesc), len(file_api_lale_service_proto_rawDesc)))
	})
	return file_api_lale_service_proto_rawDescData
}

var file_api_lale_service_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_lale_service_proto_goTypes = []any{
	(*Card)(nil),                          // 0: api.Card
	(*WordInformation)(nil),               // 1: api.WordInformation
	(*Translation)(nil),                   // 2: api.Translation
	(*Phonetic)(nil),                      // 3: api.Phonetic
	(*Meaning)(nil),                       // 4: api.Meaning
	(*Definition)(nil),                    // 5: api.Definition
	(*GetCardsRequest)(nil),               // 6: api.GetCardsRequest
	(*CreateCardRequest)(nil),             // 7: api.CreateCardRequest
	(*UpdateCardRequest)(nil),             // 8: api.UpdateCardRequest
	(*InspectCardRequest)(nil),            // 9: api.InspectCardRequest
	(*PromptCardRequest)(nil),             // 10: api.PromptCardRequest
	(*PromptCardResponse)(nil),            // 11: api.PromptCardResponse
	(*GetCardsResponse)(nil),              // 12: api.GetCardsResponse
	(*UpdateCardPerformanceRequest)(nil),  // 13: api.UpdateCardPerformanceRequest
	(*UpdateCardPerformanceResponse)(nil), // 14: api.UpdateCardPerformanceResponse
	(*GetSentencesRequest)(nil),           // 15: api.GetSentencesRequest
	(*GetSentencesResponse)(nil),          // 16: api.GetSentencesResponse
	(*GenerateStoryRequest)(nil),          // 17: api.GenerateStoryRequest
	(*GenerateStoryResponse)(nil),         // 18: api.GenerateStoryResponse
	(*DeleteCardRequest)(nil),             // 19: api.DeleteCardRequest
	nil,                                   // 20: api.WordInformation.AudioByLanguageEntry
	(*timestamppb.Timestamp)(nil),         // 21: google.protobuf.Timestamp
}
var file_api_lale_service_proto_depIdxs = []int32{
	1,  // 0: api.Card.wordInformationList:type_name -> api.WordInformation
	21, // 1: api.Card.nextDueDate:type_name -> google.protobuf.Timestamp
	2,  // 2: api.WordInformation.Translation:type_name -> api.Translation
	3,  // 3: api.WordInformation.phonetics:type_name -> api.Phonetic
	4,  // 4: api.WordInformation.meanings:type_name -> api.Meaning
	20, // 5: api.WordInformation.audioByLanguage:type_name -> api.WordInformation.AudioByLanguageEntry
	5,  // 6: api.Meaning.Definitions:type_name -> api.Definition
	1,  // 7: api.CreateCardRequest.wordInformationList:type_name -> api.WordInformation
	1,  // 8: api.UpdateCardRequest.wordInformationList:type_name -> api.WordInformation
	0,  // 9: api.GetCardsResponse.cards:type_name -> api.Card
	21, // 10: api.UpdateCardPerformanceResponse.nextDueDate:type_name -> google.protobuf.Timestamp
	9,  // 11: api.LaleService.InspectCard:input_type -> api.InspectCardRequest
	10, // 12: api.LaleService.PromptCard:input_type -> api.PromptCardRequest
	7,  // 13: api.LaleService.CreateCard:input_type -> api.CreateCardRequest
	6,  // 14: api.LaleService.GetAllCards:input_type -> api.GetCardsRequest
	8,  // 15: api.LaleService.UpdateCard:input_type -> api.UpdateCardRequest
	13, // 16: api.LaleService.UpdateCardPerformance:input_type -> api.UpdateCardPerformanceRequest
	6,  // 17: api.LaleService.GetCardsToRepeat:input_type -> api.GetCardsRequest
	6,  // 18: api.LaleService.GetCardsToLearn:input_type -> api.GetCardsRequest
	15, // 19: api.LaleService.GetSentences:input_type -> api.GetSentencesRequest
	17, // 20: api.LaleService.GenerateStory:input_type -> api.GenerateStoryRequest
	19, // 21: api.LaleService.DeleteCard:input_type -> api.DeleteCardRequest
	0,  // 22: api.LaleService.InspectCard:output_type -> api.Card
	11, // 23: api.LaleService.PromptCard:output_type -> api.PromptCardResponse
	0,  // 24: api.LaleService.CreateCard:output_type -> api.Card
	12, // 25: api.LaleService.GetAllCards:output_type -> api.GetCardsResponse
	0,  // 26: api.LaleService.UpdateCard:output_type -> api.Card
	14, // 27: api.LaleService.UpdateCardPerformance:output_type -> api.UpdateCardPerformanceResponse
	12, // 28: api.LaleService.GetCardsToRepeat:output_type -> api.GetCardsResponse
	12, // 29: api.LaleService.GetCardsToLearn:output_type -> api.GetCardsResponse
	16, // 30: api.LaleService.GetSentences:output_type -> api.GetSentencesResponse
	18, // 31: api.LaleService.GenerateStory:output_type -> api.GenerateStoryResponse
	0,  // 32: api.LaleService.DeleteCard:output_type -> api.Card
	22, // [22:33] is the sub-list for method output_type
	11, // [11:22] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_lale_service_proto_init() }
func file_api_lale_service_proto_init() {
	if File_api_lale_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_lale_service_proto_rawDesc), len(file_api_lale_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_lale_service_proto_goTypes,
		DependencyIndexes: file_api_lale_service_proto_depIdxs,
		MessageInfos:      file_api_lale_service_proto_msgTypes,
	}.Build()
	File_api_lale_service_proto = out.File
	file_api_lale_service_proto_goTypes = nil
	file_api_lale_service_proto_depIdxs = nil
}
